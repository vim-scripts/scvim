"for scvim (supercollider vim)

"this indicates the -d varaible [rundir] for running sclang in
let $SCLANG_RUNDIR = "/path/to/the/rundir/of/sclang"

"set this to 0 if you don't want to kill the terminal with sclangpipe running
"in it when you exit vim
let g:sclangKillOnExit = 1

"this indicates the terminal emulator command you will use to launch
"sclangpipe_app.sh
let g:sclangTerm = "xterm -e"

"this indicates the location to create a pipe for vim to communicate with
"sclang
let g:sclangPipeLoc = "/tmp/sclang-pipe"

"this indicates a file where the process id for sclangpipe_app is stored
let g:sclangPipeAppPidLoc = "/tmp/sclangpipe_app-pid"

"this indicates the actual location of sclangpipe_app.sh
let g:sclangPipeApp	= "$SCVIM_DIR/bin/sclangpipe_app.sh"

set runtimepath+=$SCVIM_DIR

au BufWinEnter,BufNewFile,BufRead *.sc set filetype=supercollider
au BufWinEnter,BufNewFile,BufRead *.sc let &iskeyword="@,48-57,_,192-255" | source $SCVIM_DIR/ftplugin/supercollider.vim
au BufWinEnter,BufNewFile,BufRead *.sc set sw=4 ts=4 autoindent "this line can be changed however you like
"source $SCVIM_DIR/indent/sc_indent.vim

"sc help files
au BufWinEnter,BufNewFile,BufRead *.scd set filetype=supercollider
au BufWinEnter,BufNewFile,BufRead *.scd let &iskeyword="@,48-57,_,192-255,-,|" | source $SCVIM_DIR/ftplugin/supercollider.vim
au BufWinEnter,BufNewFile,BufRead *.scd set sw=4 ts=4 autoindent "this line can be changed however you like

"required for matching
au Filetype supercollider,supercollider_help let b:match_skip = 's:scComment\|scString\|scSymbol'
au Filetype supercollider,supercollider_help let b:match_words = '(:),[:],{:}'

au BufEnter,BufWinEnter,BufNewFile,BufRead *.sc source $SCVIM_DIR/indent/sc_indent.vim


"supercollider vim keybindings
"^R" gives contents of register "

au Filetype supercollider,supercollider_help nmap <buffer> K yiw :call SChelp(""")
au Filetype supercollider,supercollider_help imap <buffer>  yiw :call SChelp(""")
au Filetype supercollider,supercollider_help nmap <buffer>  yiw :call SCdef(""")
au Filetype supercollider,supercollider_help imap <buffer>  yiw :call SCdef(""")
au Filetype supercollider,supercollider_help nmap <buffer> <F5> :call SClang_block()
au Filetype supercollider,supercollider_help imap <buffer> <F5> :call SClang_block()a
au Filetype supercollider,supercollider_help vmap <buffer> <F5> :call SClang_send()
au Filetype supercollider,supercollider_help vmap <buffer> <F6> :call SClang_send()
au Filetype supercollider,supercollider_help nmap <buffer> <F6> :call SClang_send()
au Filetype supercollider,supercollider_help imap <buffer> <F6> :call SClang_send()a
au Filetype supercollider,supercollider_help nmap <buffer> <F7> :call SClang_TempoClock_clear()
au Filetype supercollider,supercollider_help imap <buffer> <F7> :call SClang_TempoClock_clear()a
au Filetype supercollider,supercollider_help nmap <buffer> <F8> :call SClang_free("s")
au Filetype supercollider,supercollider_help imap <buffer> <F8> :call SClang_free("s")a
au Filetype supercollider,supercollider_help nmap <buffer> <F12> :call SClang_thisProcess_stop()
au Filetype supercollider,supercollider_help imap <buffer> <F12> :call SClang_thisProcess_stop()a

"end of scvim (supercollider vim)
